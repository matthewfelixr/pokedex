import { Pokedex } from "@/components/Pokedex";
import "../app/globals.css";
import { Layout } from "@/components/Layout";
import Link from "next/link";
import { useRouter } from 'next/router';
import Searchbar from "@/components/Searchbar";
import { useState } from "react";

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};



export default function RootLayout({initialPokemon}) {

    const [searchResults, setSearchResults] = useState([]);
    const router = useRouter();

    const currentPage = parseInt(router.query.page) || 1;

    const nextPage = currentPage + 1;
    const nextHref = `/?page=${nextPage}`;
  
    const prevPage = Math.max(1, currentPage - 1);
    const prevHref = `/?page=${prevPage}`;
    
    const searchPokemon = async (searchQuery) => {
        try {
          const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${searchQuery.toLowerCase()}`);
          if (!res.ok) {
            throw new Error('Failed to fetch Pokémon');
          }
          const data = await res.json();
          setSearchResults([data]);
          console.log(searchResults)
        } catch (error) {
          console.error(error);
        }
      };
  return (
    <>
    <Layout>
      <main>
        <section className="hero_banner w-full flex-center flex-col">
            <h1 className="pt-5 text-center text-5xl font-extrabold">Your Online <span className="text-red-600">Poké</span>dex</h1>
            <p className="pt-2 pb-4 text-center font-bold text-2xl">Track of the Pokémon you've seen and caught. Use the Pokédex to learn more about the different species of Pokémon and their Evolutions.</p>
        </section>
        <Searchbar onSubmit={searchPokemon}/>
        <Pokedex pokemon={searchResults}/>
        <Pokedex pokemon={initialPokemon}/>
        <div className="flex">
            <Link className={currentPage == 1 ? 'hidden' : 'mx-5'} href={prevHref}>
                <div> Previous </div>
            </Link>
            <Link className="mx-5" href={nextHref}>
                <div> Next </div>
            </Link>
        </div>
      </main>
    </Layout>
    </>
  );
}

export async function getServerSideProps(ctx){
    var page = ctx.query.page
    const gqlQuery = `
    query pokemons($limit: Int, $offset: Int) {
      pokemons(limit: $limit, offset: $offset) {
        count
        next
        previous
        status
        message
        results {
          id
          name
          image
          url
        }
      }
    }
  `;
  console.log(ctx)
    const limit = 20;
    const offset = limit * (page - 1);

    const gqlVariables = {
        offset: offset,
    };
    

    const res = await fetch('https://graphql-pokeapi.graphcdn.app/' , {
    credentials: 'omit',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({
        query: gqlQuery,
        variables: gqlVariables,
    }),
    method: 'POST',
    })
    const initialPokemon = await res.json()
    
    console.log(initialPokemon)
    return {
        props :
        {
         initialPokemon:initialPokemon.data.pokemons.results
    }}

  }